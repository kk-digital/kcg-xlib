<#@ template language="C#" hostspecific="true" #>
<#@ output extension=".g.cs" encoding="utf-8" #>
<# var alg = b2s; string isa = Host.TemplateFile.Contains("Avx512") ? "Avx512" : "Ssse3"; #>
<#@ include file="..\_BlakeSimd.ttinclude" #><#@ include file="..\_BlakeAlg.ttinclude" #>
<#+

void loadrormasks() {
#>
var r16 = Sse2.LoadVector128(prm);
var r8  = Sse2.LoadVector128(prm + Vector128<byte>.Count);
<#+
}

void loadiv() {
#>
var row3 = Sse2.LoadVector128(piv);
var row4 = Sse2.LoadVector128(piv + Vector128<uint>.Count);
<#+
}

void loadstate() {
#>
var row1 = Sse2.LoadVector128(sh + zero);
var row2 = Sse2.LoadVector128(sh + zero + Vector128<uint>.Count);
<#+
	WriteLine(null);
#>
row4 = Sse2.Xor(row4, Sse2.LoadVector128(sh + Vector128<uint>.Count * 2)); // t[] and f[]
<#+
}

void loadmsg1() {
#>
var m0 = Sse2.LoadVector128(m);
var m1 = Sse2.LoadVector128(m + Vector128<uint>.Count);
var m2 = Sse2.LoadVector128(m + Vector128<uint>.Count * 2);
var m3 = Sse2.LoadVector128(m + Vector128<uint>.Count * 3);
<#+
}

void loadmsg2() {
}

void csebreak() {
}

void finalize() {
#>
row1 = Sse2.Xor(row1, row3);
row2 = Sse2.Xor(row2, row4);
row1 = Sse2.Xor(row1, Sse2.LoadVector128(sh));
row2 = Sse2.Xor(row2, Sse2.LoadVector128(sh + Vector128<uint>.Count));
<#+
	WriteLine(null);
#>
Sse2.Store(sh, row1);
Sse2.Store(sh + Vector128<uint>.Count, row2);
<#+
}

void diagonalize(bool first = false) {
#>
row1 = Sse2.Shuffle(row1, 0b_10_01_00_11);
row4 = Sse2.Shuffle(row4, 0b_01_00_11_10);
row3 = Sse2.Shuffle(row3, 0b_00_11_10_01);
<#+
}

void undiagonalize() {
#>
row1 = Sse2.Shuffle(row1, 0b_00_11_10_01);
row4 = Sse2.Shuffle(row4, 0b_01_00_11_10);
row3 = Sse2.Shuffle(row3, 0b_10_01_00_11);
<#+
}

void g1(bool first = false) {
#>
row1 = Sse2.Add(Sse2.Add(row1, b0), row2);
<#+
	if (Host.TemplateFile.Contains("Avx512")) {
#>
row4 = Avx512F.VL.RotateRight(Sse2.Xor(row4, row1), 16);
<#+
	} else {
#>
row4 = Sse2.Xor(row4, row1);
row4 = Ssse3.Shuffle(row4.AsByte(), r16).AsUInt32();
<#+
	}
	WriteLine(null);
#>
row3 = Sse2.Add(row3, row4);
<#+
	if (Host.TemplateFile.Contains("Avx512")) {
#>
row2 = Avx512F.VL.RotateRight(Sse2.Xor(row2, row3), 12);
<#+
	} else {
#>
row2 = Sse2.Xor(row2, row3);
row2 = Sse2.Xor(Sse2.ShiftRightLogical(row2, 12), Sse2.ShiftLeftLogical(row2, 32 - 12));
<#+
	}
}

void g2(bool first = false) {
#>
row1 = Sse2.Add(Sse2.Add(row1, b0), row2);
<#+
	if (Host.TemplateFile.Contains("Avx512")) {
#>
row4 = Avx512F.VL.RotateRight(Sse2.Xor(row4, row1), 8);
<#+
	} else {
#>
row4 = Sse2.Xor(row4, row1);
row4 = Ssse3.Shuffle(row4.AsByte(), r8).AsUInt32();
<#+
	}
	WriteLine(null);
#>
row3 = Sse2.Add(row3, row4);
<#+
	if (Host.TemplateFile.Contains("Avx512")) {
#>
row2 = Avx512F.VL.RotateRight(Sse2.Xor(row2, row3), 7);
<#+
	} else {
#>
row2 = Sse2.Xor(row2, row3);
row2 = Sse2.Xor(Sse2.ShiftRightLogical(row2, 7), Sse2.ShiftLeftLogical(row2, 32 - 7));
<#+
	}
}

void loadcode(int round, int part) {
	int r = round % 10 * 10 + part;
	switch (r) {
		case 0:
#>
<#= round == 0 ? "var " : "" #>b0 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_10_00_10_00).AsUInt32();
<#+
			break;
		case 1:
#>
b0 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_11_01_11_01).AsUInt32();
<#+
			break;
		case 2:
		// t0 = 8, 10, 12, 14
#>
var t0 = Sse.Shuffle(m2.AsSingle(), m3.AsSingle(), 0b_10_00_10_00).AsUInt32();
b0 = Sse2.Shuffle(t0, 0b_10_01_00_11);
<#+
			break;
		case 3:
		// t0 = 9, 11, 13, 15
#>
t0 = Sse.Shuffle(m2.AsSingle(), m3.AsSingle(), 0b_11_01_11_01).AsUInt32();
b0 = Sse2.Shuffle(t0, 0b_10_01_00_11);
<#+
			break;
		case 10:
		// t0 = 14, 15, 4, 6
#>
t0 = Sse.Shuffle(m3.AsSingle(), m1.AsSingle(), 0b_10_00_11_10).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), b0.AsSingle(), 0b_11_01_10_00).AsUInt32();
<#+
			break;
		case 11:
#>
b0 = Sse.Shuffle(m2.AsSingle(), t0.AsSingle(), 0b_11_01_00_10).AsUInt32();
<#+
			break;
		case 12:
		// t0 = 1, 2, 5, 7
		// t1 = 0, 1, 10, 11
#>
t0 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_11_01_10_01).AsUInt32();
var t1 = Sse2.Shuffle(m0.AsDouble(), m2.AsDouble(), 0b_10).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_11_00_00_10).AsUInt32();
<#+
			break;
		case 13:
		// t1 = 2, 3, 12, 13
#>
t1 = Sse2.Shuffle(m0.AsDouble(), m3.AsDouble(), 0b_01).AsUInt32();
b0 = Sse.Shuffle(t1.AsSingle(), t0.AsSingle(), 0b_11_01_10_01).AsUInt32();
<#+
			break;
		case 20:
		// t0 = 8, 11, 12, 13
		// t1 = 4, 5, 14, 15
#>
t0 = Sse.Shuffle(m2.AsSingle(), m3.AsSingle(), 0b_01_00_11_00).AsUInt32();
t1 = Sse2.Shuffle(m1.AsDouble(), m3.AsDouble(), 0b_10).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_11_01_10_01).AsUInt32();
<#+
			break;
		case 21:
		// t0 = 8, 13, 0, 2
#>
t0 = Sse.Shuffle(t0.AsSingle(), m0.AsSingle(), 0b_10_00_11_00).AsUInt32();
b0 = Sse2.Shuffle(t0, 0b_01_11_10_00);
<#+
			break;
		case 22:
		// t0 = 1, 3, 6, 7
#>
t0 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_11_10_11_01).AsUInt32();
b0 = Sse.Shuffle(m2.AsSingle(), t0.AsSingle(), 0b_11_01_10_01).AsUInt32();
<#+
			break;
		case 23:
#>
b0 = Sse.Shuffle(t1.AsSingle(), t0.AsSingle(), 0b_00_10_10_00).AsUInt32();
<#+
			break;
		case 30:
		// t1 = 8, 11, 13, 14
#>
t1 = Sse.Shuffle(m2.AsSingle(), m3.AsSingle(), 0b_10_01_11_00).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_01_10_01_11).AsUInt32();
<#+
			break;
		case 31:
		// t0 = 0, 1, 9, 10
#>
t0 = Sse.Shuffle(m0.AsSingle(), m2.AsSingle(), 0b_10_01_01_00).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), m3.AsSingle(), 0b_10_00_01_10).AsUInt32();
<#+
			break;
		case 32:
		// t1 = 14, 2, 15, 3
#>
t1 = Sse2.UnpackHigh(m3, m0);
b0 = Sse.Shuffle(t1.AsSingle(), m1.AsSingle(), 0b_00_01_01_10).AsUInt32();
<#+
			break;
		case 33:
		// t1 = 5, 6, 8, 9
#>
t1 = Sse.Shuffle(m1.AsSingle(), m2.AsSingle(), 0b_01_00_10_01).AsUInt32();
b0 = Sse.Shuffle(t1.AsSingle(), t0.AsSingle(), 0b_00_11_01_10).AsUInt32();
<#+
			break;
		case 40:
		// t0 = 2, 10, 3, 11
#>
t0 = Sse2.UnpackHigh(m0, m2);
b0 = Sse.Shuffle(t1.AsSingle(), t0.AsSingle(), 0b_01_00_00_11).AsUInt32();
<#+
			break;
		case 41:
		// t0 = 0, 3, 14, 15
		// t1 = 0, 15, 4, 7
#>
t0 = Sse.Shuffle(m0.AsSingle(), m3.AsSingle(), 0b_11_10_11_00).AsUInt32();
t1 = Sse.Shuffle(t0.AsSingle(), m1.AsSingle(), 0b_11_00_11_00).AsUInt32();
b0 = Sse2.Shuffle(t1, 0b_01_10_11_00);
<#+
			break;
		case 42:
		// t1 = 10, 6, 11, 7
#>
t1 = Sse2.UnpackHigh(m2, m1);
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_01_10_10_01).AsUInt32();
<#+
			break;
		case 43:
		// t0 = 12, 0, 13, 1
		// t1 = 12, 8, 13, 9
#>
t0 = Sse2.UnpackLow(m3, m0);
t1 = Sse2.UnpackLow(m3, m2);
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_01_00_11_10).AsUInt32();
<#+
			break;
		case 50:
		// t0 = 1, 2, 4, 6
		// t1 = 0, 3, 8, 11
#>
t0 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_10_00_10_01).AsUInt32();
t1 = Sse.Shuffle(m0.AsSingle(), m2.AsSingle(), 0b_11_00_11_00).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_10_00_11_01).AsUInt32();
<#+
			break;
		case 51:
		// t2 = 9, 10, 12, 13
#>
var t2 = Sse.Shuffle(m2.AsSingle(), m3.AsSingle(), 0b_01_00_10_01).AsUInt32();
b0 = Sse.Shuffle(t2.AsSingle(), t1.AsSingle(), 0b_01_11_01_10).AsUInt32();
<#+
			break;
		case 52:
		// t1 = 5, 7, 14, 15
#>
t1 = Sse.Shuffle(m1.AsSingle(), m3.AsSingle(), 0b_11_10_11_01).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_11_01_10_00).AsUInt32();
<#+
			break;
		case 53:
		// t1 = 4, 5, 14, 15
#>
t1 = Sse.Shuffle(m1.AsSingle(), m3.AsSingle(), 0b_11_10_01_00).AsUInt32();
b0 = Sse.Shuffle(t2.AsSingle(), t1.AsSingle(), 0b_10_01_11_00).AsUInt32();
<#+
			break;
		case 60:
		// t0 = 0, 1, 12, 13
#>
t0 = Sse2.Shuffle(m0.AsDouble(), m3.AsDouble(), 0b_00).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_00_10_01_10).AsUInt32();
<#+
			break;
		case 61:
		// t0 = 10, 11, 12, 13
#>
t0 = Sse2.Shuffle(m2.AsDouble(), m3.AsDouble(), 0b_01).AsUInt32();
b0 = Sse.Shuffle(t1.AsSingle(), t0.AsSingle(), 0b_00_11_11_01).AsUInt32();
<#+
			break;
		case 62:
		// t0 = 0, 8, 1, 9
		// t1 = 6, 7, 9, 11
#>
t0 = Sse2.UnpackLow(m0, m2);
t1 = Sse.Shuffle(m1.AsSingle(), m2.AsSingle(), 0b_11_01_11_10).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_10_00_00_01).AsUInt32();
<#+
			break;
		case 63:
#>
b0 = Sse.Shuffle(t1.AsSingle(), m0.AsSingle(), 0b_10_11_01_11).AsUInt32();
<#+
			break;
		case 70:
		// t0 = 12, 13, 6, 7
		// t1 = 12, 13, 2, 3
#>
t0 = Sse2.Shuffle(m3.AsDouble(), m1.AsDouble(), 0b_10).AsUInt32();
t1 = Sse2.Shuffle(m3.AsDouble(), m0.AsDouble(), 0b_10).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_11_00_11_01).AsUInt32();
<#+
			break;
		case 71:
		// t0 = 8, 11, 14, 15
		// t1 = 0, 1, 9, 10
#>
t0 = Sse.Shuffle(m2.AsSingle(), m3.AsSingle(), 0b_11_10_11_00).AsUInt32();
t1 = Sse.Shuffle(m0.AsSingle(), m2.AsSingle(), 0b_10_01_00_01).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_10_00_10_01).AsUInt32();
<#+
			break;
		case 72:
		// t2 = 2, 3, 4, 5
#>
t2 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_01_00_11_10).AsUInt32();
b0 = Sse.Shuffle(t2.AsSingle(), t0.AsSingle(), 0b_00_11_11_00).AsUInt32();
<#+
			break;
		case 73:
#>
b0 = Sse.Shuffle(t1.AsSingle(), m1.AsSingle(), 0b_10_00_01_11).AsUInt32();
<#+
			break;
		case 80:
		// t0 = 6, 14, 7, 15
		// t1 = 0, 3, 8, 11
#>
t0 = Sse2.UnpackHigh(m1, m3);
t1 = Sse.Shuffle(m0.AsSingle(), m2.AsSingle(), 0b_11_00_00_11).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_01_11_01_00).AsUInt32();
<#+
			break;
		case 81:
		// t0 = 14, 15, 8, 9
#>
t0 = Sse.Shuffle(m3.AsSingle(), m2.AsSingle(), 0b_01_00_11_10).AsUInt32();
b0 = Sse.Shuffle(t0.AsSingle(), t1.AsSingle(), 0b_10_00_11_01).AsUInt32();
<#+
			break;
		case 82:
		// t0 = 12, 0, 13, 1
		// t1 = 12, 13, 10, 11
#>
t0 = Sse2.UnpackLow(m3, m0);
t1 = Sse2.Shuffle(m3.AsDouble(), m2.AsDouble(), 0b_10).AsUInt32();
b0 = Sse.Shuffle(t1.AsSingle(), t0.AsSingle(), 0b_11_10_00_10).AsUInt32();
<#+
			break;
		case 83:
		// t1 = 2, 3, 4, 5
#>
t1 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_01_00_01_10).AsUInt32();
b0 = Sse.Shuffle(t1.AsSingle(), m1.AsSingle(), 0b_00_11_00_11).AsUInt32();
<#+
			break;
		case 90:
		// t0 = 0, 1, 6, 7
#>
t0 = Sse.Shuffle(m0.AsSingle(), m1.AsSingle(), 0b_11_10_01_00).AsUInt32();
b0 = Sse.Shuffle(m2.AsSingle(), t0.AsSingle(), 0b_01_11_00_10).AsUInt32();
<#+
			break;
		case 91:
#>
b0 = Sse.Shuffle(t1.AsSingle(), m1.AsSingle(), 0b_01_10_10_00).AsUInt32();
<#+
			break;
		case 92:
		// t0 = 0, 3, 9, 11
#>
t0 = Sse.Shuffle(m0.AsSingle(), m2.AsSingle(), 0b_11_01_11_00).AsUInt32();
b0 = Sse.Shuffle(m3.AsSingle(), t0.AsSingle(), 0b_01_10_11_01).AsUInt32();
<#+
			break;
		case 93:
#>
b0 = Sse.Shuffle(t0.AsSingle(), m3.AsSingle(), 0b_00_10_11_00).AsUInt32();
<#+
			break;
	}
}
#>